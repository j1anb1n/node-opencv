#include "OpenCV.h"
#include "Constants.h"

#define CONST(C) \
  obj->Set(Nan::New<String>(#C).ToLocalChecked(), Nan::New<Integer>(C));

#define CONST_DOUBLE(C) \
  obj->Set(Nan::New<String>(#C).ToLocalChecked(), Nan::New<Number>(C));

#define CONST_ENUM(C) \
  obj->Set(Nan::New<String>(#C).ToLocalChecked(), Nan::New<Integer>((int)(cv::C)));

void Constants::Init(Local<Object> target) {
  Nan::Persistent<Object> inner;
  Local<Object> obj = Nan::New<Object>();
  inner.Reset(obj);

  CONST(CV_8U);
  CONST(CV_8S);
  CONST(CV_16U);
  CONST(CV_16S);
  CONST(CV_32S);
  CONST(CV_32F);
  CONST(CV_64F);
  CONST(CV_USRTYPE1);

  CONST(CV_8UC1);
  CONST(CV_8UC2);
  CONST(CV_8UC3);
  CONST(CV_8UC4);

  CONST(CV_8SC1);
  CONST(CV_8SC2);
  CONST(CV_8SC3);
  CONST(CV_8SC4);

  CONST(CV_16UC1);
  CONST(CV_16UC2);
  CONST(CV_16UC3);
  CONST(CV_16UC4);

  CONST(CV_16SC1);
  CONST(CV_16SC2);
  CONST(CV_16SC3);
  CONST(CV_16SC4);

  CONST(CV_32SC1);
  CONST(CV_32SC2);
  CONST(CV_32SC3);
  CONST(CV_32SC4);

  CONST(CV_32FC1);
  CONST(CV_32FC2);
  CONST(CV_32FC3);
  CONST(CV_32FC4);

  CONST(CV_64FC1);
  CONST(CV_64FC2);
  CONST(CV_64FC3);
  CONST(CV_64FC4);

  CONST_DOUBLE(CV_PI);
  CONST(CV_FILLED);

  CONST_ENUM(BORDER_DEFAULT);
  CONST_ENUM(BORDER_REPLICATE);
  CONST_ENUM(BORDER_REFLECT);
  CONST_ENUM(BORDER_REFLECT_101);
  CONST_ENUM(BORDER_WRAP);
  CONST_ENUM(BORDER_CONSTANT);

  CONST_ENUM(INTER_NEAREST);
  CONST_ENUM(INTER_LINEAR);
  CONST_ENUM(INTER_AREA);
  CONST_ENUM(INTER_CUBIC);
  CONST_ENUM(INTER_LANCZOS4);

  CONST_ENUM(NORM_MINMAX);
  CONST_ENUM(NORM_INF);
  CONST_ENUM(NORM_L1);
  CONST_ENUM(NORM_L2);
  CONST_ENUM(NORM_L2SQR);
  CONST_ENUM(NORM_HAMMING);
  CONST_ENUM(NORM_HAMMING2);
  CONST_ENUM(NORM_RELATIVE);
  CONST_ENUM(NORM_TYPE_MASK);

  CONST_ENUM(RETR_EXTERNAL);
  CONST_ENUM(RETR_LIST);
  CONST_ENUM(RETR_CCOMP);
  CONST_ENUM(RETR_TREE);

  CONST_ENUM(CHAIN_APPROX_NONE);
  CONST_ENUM(CHAIN_APPROX_SIMPLE);
  CONST_ENUM(CHAIN_APPROX_TC89_L1);
  CONST_ENUM(CHAIN_APPROX_TC89_KCOS);

  CONST_ENUM(MORPH_RECT);
  CONST_ENUM(MORPH_CROSS);
  CONST_ENUM(MORPH_ELLIPSE);

  CONST_ENUM(MORPH_ERODE);
  CONST_ENUM(MORPH_DILATE);
  CONST_ENUM(MORPH_OPEN);
  CONST_ENUM(MORPH_CLOSE);
  CONST_ENUM(MORPH_GRADIENT);
  CONST_ENUM(MORPH_TOPHAT);
  CONST_ENUM(MORPH_BLACKHAT);
  CONST_ENUM(MORPH_HITMISS);

  CONST_ENUM(BORDER_CONSTANT);
  CONST_ENUM(BORDER_REPLICATE);
  CONST_ENUM(BORDER_REFLECT);
  CONST_ENUM(BORDER_WRAP);
  CONST_ENUM(BORDER_REFLECT_101);
  CONST_ENUM(BORDER_TRANSPARENT);
  CONST_ENUM(BORDER_REFLECT101);
  CONST_ENUM(BORDER_DEFAULT);
  CONST_ENUM(BORDER_ISOLATED);

  CONST_ENUM(HISTCMP_CORREL);
  CONST_ENUM(HISTCMP_CHISQR);
  CONST_ENUM(HISTCMP_INTERSECT);
  CONST_ENUM(HISTCMP_BHATTACHARYYA);
  CONST_ENUM(HISTCMP_HELLINGER);
  CONST_ENUM(HISTCMP_CHISQR_ALT);
  CONST_ENUM(HISTCMP_KL_DIV);

  CONST_ENUM(ADAPTIVE_THRESH_MEAN_C);
  CONST_ENUM(ADAPTIVE_THRESH_GAUSSIAN_C);

  CONST_ENUM(THRESH_BINARY);
  CONST_ENUM(THRESH_BINARY_INV);
  CONST_ENUM(THRESH_TRUNC);
  CONST_ENUM(THRESH_TOZERO);
  CONST_ENUM(THRESH_TOZERO_INV);
  CONST_ENUM(THRESH_MASK);
  CONST_ENUM(THRESH_OTSU);
  CONST_ENUM(THRESH_TRIANGLE);

  CONST(CV_CONTOURS_MATCH_I1);
  CONST(CV_CONTOURS_MATCH_I2);
  CONST(CV_CONTOURS_MATCH_I3);

  target->Set(Nan::New("Constants").ToLocalChecked(), obj);
}

#undef CONST
